diff -uar live-20210804/liveMedia/include/MatroskaFile.hh live-20210806/liveMedia/include/MatroskaFile.hh
--- live-20210804/liveMedia/include/MatroskaFile.hh	2021-08-04 04:04:45.000000000 +0200
+++ live-20210806/liveMedia/include/MatroskaFile.hh	2021-08-07 00:49:10.000000000 +0200
@@ -34,6 +34,8 @@
 class MatroskaTrack; // forward
 class MatroskaDemux; // forward
 
+typedef void MatroskaDemuxOnDeletionFunc(void* objectToNotify, MatroskaDemux* demuxBeingDeleted);
+
 class MatroskaFile: public Medium {
 public:
   typedef void (onCreationFunc)(MatroskaFile* newFile, void* clientData);
@@ -45,8 +47,9 @@
 
   MatroskaTrack* lookup(unsigned trackNumber) const;
 
-  // Create a demultiplexor for extracting tracks from this file.  (Separate clients will typically have separate demultiplexors.)
-  MatroskaDemux* newDemux();
+  MatroskaDemux* newDemux(MatroskaDemuxOnDeletionFunc* onDeletionFunc = NULL, void* objectToNotify = NULL);
+      // Creates a demultiplexor for extracting tracks from this file.
+      // (Separate clients will typically have separate demultiplexors.)
 
   // Parameters of the file ('Segment'); set when the file is parsed:
   unsigned timecodeScale() { return fTimecodeScale; } // in nanoseconds
diff -uar live-20210804/liveMedia/include/MatroskaFileServerDemux.hh live-20210806/liveMedia/include/MatroskaFileServerDemux.hh
--- live-20210804/liveMedia/include/MatroskaFileServerDemux.hh	2021-08-04 04:04:45.000000000 +0200
+++ live-20210806/liveMedia/include/MatroskaFileServerDemux.hh	2021-08-07 00:49:10.000000000 +0200
@@ -67,6 +67,10 @@
 
   static void onMatroskaFileCreation(MatroskaFile* newFile, void* clientData);
   void onMatroskaFileCreation(MatroskaFile* newFile);
+
+  static void onDemuxDeletion(void* clientData, MatroskaDemux* demuxBeingDeleted);
+  void onDemuxDeletion(MatroskaDemux* demuxBeingDeleted);
+
 private:
   char const* fFileName; 
   onCreationFunc* fOnCreation;
diff -uar live-20210804/liveMedia/include/OggFile.hh live-20210806/liveMedia/include/OggFile.hh
--- live-20210804/liveMedia/include/OggFile.hh	2021-08-04 04:04:45.000000000 +0200
+++ live-20210806/liveMedia/include/OggFile.hh	2021-08-07 00:49:10.000000000 +0200
@@ -31,6 +31,8 @@
 class OggTrack; // forward
 class OggDemux; // forward
 
+typedef void OggDemuxOnDeletionFunc(void* objectToNotify, OggDemux* demuxBeingDeleted);
+
 class OggFile: public Medium {
 public:
   typedef void (onCreationFunc)(OggFile* newFile, void* clientData);
@@ -44,7 +46,7 @@
 
   OggTrack* lookup(u_int32_t trackNumber);
 
-  OggDemux* newDemux();
+  OggDemux* newDemux(OggDemuxOnDeletionFunc* onDeletionFunc = NULL, void* objectToNotify = NULL);
       // Creates a demultiplexor for extracting tracks from this file.
       // (Separate clients will typically have separate demultiplexors.)
 
diff -uar live-20210804/liveMedia/include/OggFileServerDemux.hh live-20210806/liveMedia/include/OggFileServerDemux.hh
--- live-20210804/liveMedia/include/OggFileServerDemux.hh	2021-08-04 04:04:45.000000000 +0200
+++ live-20210806/liveMedia/include/OggFileServerDemux.hh	2021-08-07 00:49:10.000000000 +0200
@@ -64,6 +64,10 @@
 
   static void onOggFileCreation(OggFile* newFile, void* clientData);
   void onOggFileCreation(OggFile* newFile);
+
+  static void onDemuxDeletion(void* clientData, OggDemux* demuxBeingDeleted);
+  void onDemuxDeletion(OggDemux* demuxBeingDeleted);
+  
 private:
   char const* fFileName; 
   onCreationFunc* fOnCreation;
diff -uar live-20210804/liveMedia/MatroskaFile.cpp live-20210806/liveMedia/MatroskaFile.cpp
--- live-20210804/liveMedia/MatroskaFile.cpp	2021-08-04 04:04:45.000000000 +0200
+++ live-20210806/liveMedia/MatroskaFile.cpp	2021-08-07 00:49:10.000000000 +0200
@@ -132,14 +132,21 @@
   }
 }
 
+struct DemuxRecord {
+  MatroskaDemux* demux;
+  MatroskaDemuxOnDeletionFunc* onDeletionFunc;
+  void* objectToNotify;
+};
+
 MatroskaFile::~MatroskaFile() {
   delete fParserForInitialization;
   delete fCuePoints;
 
   // Delete any outstanding "MatroskaDemux"s, and the table for them:
-  MatroskaDemux* demux;
-  while ((demux = (MatroskaDemux*)fDemuxesTable->RemoveNext()) != NULL) {
-    delete demux;
+  DemuxRecord* demuxRecord;
+  while ((demuxRecord = (DemuxRecord*)fDemuxesTable->RemoveNext()) != NULL) {
+    delete demuxRecord->demux;
+    delete demuxRecord;
   }
   delete fDemuxesTable;
   delete fTrackTable;
@@ -233,15 +240,30 @@
   return fTrackTable->lookup(trackNumber);
 }
 
-MatroskaDemux* MatroskaFile::newDemux() {
+MatroskaDemux* MatroskaFile
+::newDemux(MatroskaDemuxOnDeletionFunc* onDeletionFunc, void* objectToNotify) {
   MatroskaDemux* demux = new MatroskaDemux(*this);
-  fDemuxesTable->Add((char const*)demux, demux);
+
+  DemuxRecord* demuxRecord = new DemuxRecord();
+  demuxRecord->demux = demux;
+  demuxRecord->onDeletionFunc = onDeletionFunc;
+  demuxRecord->objectToNotify = objectToNotify;
+
+  fDemuxesTable->Add((char const*)demux, demuxRecord);
 
   return demux;
 }
 
 void MatroskaFile::removeDemux(MatroskaDemux* demux) {
-  fDemuxesTable->Remove((char const*)demux);
+  DemuxRecord* demuxRecord = (DemuxRecord*)(fDemuxesTable->Lookup((char const*)demux));
+  if (demuxRecord != NULL) {
+    fDemuxesTable->Remove((char const*)demux);
+
+    if (demuxRecord->onDeletionFunc != NULL) {
+      (*demuxRecord->onDeletionFunc)(demuxRecord->objectToNotify, demux);
+    }
+    delete demuxRecord;
+  }
 }
 
 #define getPrivByte(b) if (n == 0) break; else do {b = *p++; --n;} while (0) /* Vorbis/Theora configuration header parsing */
diff -uar live-20210804/liveMedia/MatroskaFileServerDemux.cpp live-20210806/liveMedia/MatroskaFileServerDemux.cpp
--- live-20210804/liveMedia/MatroskaFileServerDemux.cpp	2021-08-04 04:04:45.000000000 +0200
+++ live-20210806/liveMedia/MatroskaFileServerDemux.cpp	2021-08-07 00:49:10.000000000 +0200
@@ -87,7 +87,7 @@
       // for other ('real') session ids).  Because of this, a separate demultiplexor is used for each 'session 0' track.
   }
 
-  if (demuxToUse == NULL) demuxToUse = fOurMatroskaFile->newDemux();
+  if (demuxToUse == NULL) demuxToUse = fOurMatroskaFile->newDemux(onDemuxDeletion, this);
 
   fLastClientSessionId = clientSessionId;
   fLastCreatedDemux = demuxToUse;
@@ -119,3 +119,12 @@
   // Now, call our own creation notification function:
   if (fOnCreation != NULL) (*fOnCreation)(this, fOnCreationClientData);
 }
+
+void MatroskaFileServerDemux
+::onDemuxDeletion(void* clientData, MatroskaDemux* demuxBeingDeleted) {
+  ((MatroskaFileServerDemux*)clientData)->onDemuxDeletion(demuxBeingDeleted);
+}
+
+void MatroskaFileServerDemux::onDemuxDeletion(MatroskaDemux* demuxBeingDeleted) {
+  if (fLastCreatedDemux == demuxBeingDeleted) fLastCreatedDemux = NULL;
+}
diff -uar live-20210804/liveMedia/OggFile.cpp live-20210806/liveMedia/OggFile.cpp
--- live-20210804/liveMedia/OggFile.cpp	2021-08-04 04:04:45.000000000 +0200
+++ live-20210806/liveMedia/OggFile.cpp	2021-08-07 00:49:10.000000000 +0200
@@ -56,13 +56,38 @@
   return fTrackTable->lookup(trackNumber);
 }
 
-OggDemux* OggFile::newDemux() {
+struct DemuxRecord {
+  OggDemux* demux;
+  OggDemuxOnDeletionFunc* onDeletionFunc;
+  void* objectToNotify;
+};
+
+OggDemux* OggFile
+::newDemux(OggDemuxOnDeletionFunc* onDeletionFunc, void* objectToNotify) {
   OggDemux* demux = new OggDemux(*this);
-  fDemuxesTable->Add((char const*)demux, demux);
+
+  DemuxRecord* demuxRecord = new DemuxRecord();
+  demuxRecord->demux = demux;
+  demuxRecord->onDeletionFunc = onDeletionFunc;
+  demuxRecord->objectToNotify = objectToNotify;
+
+  fDemuxesTable->Add((char const*)demux, demuxRecord);
 
   return demux;
 }
 
+void OggFile::removeDemux(OggDemux* demux) {
+  DemuxRecord* demuxRecord = (DemuxRecord*)(fDemuxesTable->Lookup((char const*)demux));
+  if (demuxRecord != NULL) {
+    fDemuxesTable->Remove((char const*)demux);
+
+    if (demuxRecord->onDeletionFunc != NULL) {
+      (*demuxRecord->onDeletionFunc)(demuxRecord->objectToNotify, demux);
+    }
+    delete demuxRecord;
+  }
+}
+
 unsigned OggFile::numTracks() const {
   return fTrackTable->numTracks();
 }
@@ -143,9 +168,10 @@
   delete fParserForInitialization;
 
   // Delete any outstanding "OggDemux"s, and the table for them:
-  OggDemux* demux;
-  while ((demux = (OggDemux*)fDemuxesTable->RemoveNext()) != NULL) {
-    delete demux;
+  DemuxRecord* demuxRecord;
+  while ((demuxRecord = (DemuxRecord*)fDemuxesTable->RemoveNext()) != NULL) {
+    delete demuxRecord->demux;
+    delete demuxRecord;
   }
   delete fDemuxesTable;
   delete fTrackTable;
@@ -169,10 +195,6 @@
   fTrackTable->add(newTrack);
 }
 
-void OggFile::removeDemux(OggDemux* demux) {
-  fDemuxesTable->Remove((char const*)demux);
-}
-
 
 ////////// OggTrackTable implementation /////////
 
@@ -290,7 +312,7 @@
   fDemuxedTracksTable->Remove((char const*)trackNumber);
   if (fDemuxedTracksTable->numEntries() == 0) {
     // We no longer have any demuxed tracks, so delete ourselves now:
-    delete this;
+    Medium::close(this);
   }
 }
 
diff -uar live-20210804/liveMedia/OggFileServerDemux.cpp live-20210806/liveMedia/OggFileServerDemux.cpp
--- live-20210804/liveMedia/OggFileServerDemux.cpp	2021-08-04 04:04:45.000000000 +0200
+++ live-20210806/liveMedia/OggFileServerDemux.cpp	2021-08-07 00:49:10.000000000 +0200
@@ -71,7 +71,7 @@
       // for other ('real') session ids).  Because of this, a separate demultiplexor is used for each 'session 0' track.
   }
 
-  if (demuxToUse == NULL) demuxToUse = fOurOggFile->newDemux();
+  if (demuxToUse == NULL) demuxToUse = fOurOggFile->newDemux(onDemuxDeletion, this);
 
   fLastClientSessionId = clientSessionId;
   fLastCreatedDemux = demuxToUse;
@@ -107,3 +107,11 @@
   // Now, call our own creation notification function:
   if (fOnCreation != NULL) (*fOnCreation)(this, fOnCreationClientData);
 }
+
+void OggFileServerDemux::onDemuxDeletion(void* clientData, OggDemux* demuxBeingDeleted) {
+  ((OggFileServerDemux*)clientData)->onDemuxDeletion(demuxBeingDeleted);
+}
+
+void OggFileServerDemux::onDemuxDeletion(OggDemux* demuxBeingDeleted) {
+  if (fLastCreatedDemux == demuxBeingDeleted) fLastCreatedDemux = NULL;
+}
